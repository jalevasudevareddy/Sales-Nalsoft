package model.Enitity;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 01 15:37:10 IST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxwsHarItemTypeAcctEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SetupId {
            public Object get(XxwsHarItemTypeAcctEOImpl obj) {
                return obj.getSetupId();
            }

            public void put(XxwsHarItemTypeAcctEOImpl obj, Object value) {
                obj.setSetupId((Number)value);
            }
        }
        ,
        BuId {
            public Object get(XxwsHarItemTypeAcctEOImpl obj) {
                return obj.getBuId();
            }

            public void put(XxwsHarItemTypeAcctEOImpl obj, Object value) {
                obj.setBuId((Number)value);
            }
        }
        ,
        ItemTypeCode {
            public Object get(XxwsHarItemTypeAcctEOImpl obj) {
                return obj.getItemTypeCode();
            }

            public void put(XxwsHarItemTypeAcctEOImpl obj, Object value) {
                obj.setItemTypeCode((String)value);
            }
        }
        ,
        CogsAccnt {
            public Object get(XxwsHarItemTypeAcctEOImpl obj) {
                return obj.getCogsAccnt();
            }

            public void put(XxwsHarItemTypeAcctEOImpl obj, Object value) {
                obj.setCogsAccnt((Number)value);
            }
        }
        ,
        RevenueAccnt {
            public Object get(XxwsHarItemTypeAcctEOImpl obj) {
                return obj.getRevenueAccnt();
            }

            public void put(XxwsHarItemTypeAcctEOImpl obj, Object value) {
                obj.setRevenueAccnt((Number)value);
            }
        }
        ,
        StartDate {
            public Object get(XxwsHarItemTypeAcctEOImpl obj) {
                return obj.getStartDate();
            }

            public void put(XxwsHarItemTypeAcctEOImpl obj, Object value) {
                obj.setStartDate((Date)value);
            }
        }
        ,
        EndDate {
            public Object get(XxwsHarItemTypeAcctEOImpl obj) {
                return obj.getEndDate();
            }

            public void put(XxwsHarItemTypeAcctEOImpl obj, Object value) {
                obj.setEndDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(XxwsHarItemTypeAcctEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(XxwsHarItemTypeAcctEOImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(XxwsHarItemTypeAcctEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(XxwsHarItemTypeAcctEOImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(XxwsHarItemTypeAcctEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(XxwsHarItemTypeAcctEOImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(XxwsHarItemTypeAcctEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(XxwsHarItemTypeAcctEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        ObjectVersionNumber {
            public Object get(XxwsHarItemTypeAcctEOImpl obj) {
                return obj.getObjectVersionNumber();
            }

            public void put(XxwsHarItemTypeAcctEOImpl obj, Object value) {
                obj.setObjectVersionNumber((Number)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(XxwsHarItemTypeAcctEOImpl object);

        public abstract void put(XxwsHarItemTypeAcctEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int SETUPID = AttributesEnum.SetupId.index();
    public static final int BUID = AttributesEnum.BuId.index();
    public static final int ITEMTYPECODE = AttributesEnum.ItemTypeCode.index();
    public static final int COGSACCNT = AttributesEnum.CogsAccnt.index();
    public static final int REVENUEACCNT = AttributesEnum.RevenueAccnt.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int OBJECTVERSIONNUMBER = AttributesEnum.ObjectVersionNumber.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxwsHarItemTypeAcctEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.Enitity.XxwsHarItemTypeAcctEO");
    }

    /**
     * Gets the attribute value for SetupId, using the alias name SetupId.
     * @return the SetupId
     */
    public Number getSetupId() {
        return (Number)getAttributeInternal(SETUPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SetupId.
     * @param value value to set the SetupId
     */
    public void setSetupId(Number value) {
        setAttributeInternal(SETUPID, value);
    }

    /**
     * Gets the attribute value for BuId, using the alias name BuId.
     * @return the BuId
     */
    public Number getBuId() {
        return (Number)getAttributeInternal(BUID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuId.
     * @param value value to set the BuId
     */
    public void setBuId(Number value) {
        setAttributeInternal(BUID, value);
    }

    /**
     * Gets the attribute value for ItemTypeCode, using the alias name ItemTypeCode.
     * @return the ItemTypeCode
     */
    public String getItemTypeCode() {
        return (String)getAttributeInternal(ITEMTYPECODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemTypeCode.
     * @param value value to set the ItemTypeCode
     */
    public void setItemTypeCode(String value) {
        setAttributeInternal(ITEMTYPECODE, value);
    }

    /**
     * Gets the attribute value for CogsAccnt, using the alias name CogsAccnt.
     * @return the CogsAccnt
     */
    public Number getCogsAccnt() {
        return (Number)getAttributeInternal(COGSACCNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for CogsAccnt.
     * @param value value to set the CogsAccnt
     */
    public void setCogsAccnt(Number value) {
        setAttributeInternal(COGSACCNT, value);
    }

    /**
     * Gets the attribute value for RevenueAccnt, using the alias name RevenueAccnt.
     * @return the RevenueAccnt
     */
    public Number getRevenueAccnt() {
        return (Number)getAttributeInternal(REVENUEACCNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RevenueAccnt.
     * @param value value to set the RevenueAccnt
     */
    public void setRevenueAccnt(Number value) {
        setAttributeInternal(REVENUEACCNT, value);
    }

    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the StartDate
     */
    public Date getStartDate() {
        return (Date)getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the EndDate
     */
    public Date getEndDate() {
        return (Date)getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public String getCreatedBy() {
        return (String)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public String getLastUpdatedBy() {
        return (String)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for ObjectVersionNumber, using the alias name ObjectVersionNumber.
     * @return the ObjectVersionNumber
     */
    public Number getObjectVersionNumber() {
        return (Number)getAttributeInternal(OBJECTVERSIONNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ObjectVersionNumber.
     * @param value value to set the ObjectVersionNumber
     */
    public void setObjectVersionNumber(Number value) {
        setAttributeInternal(OBJECTVERSIONNUMBER, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @param setupId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number setupId) {
        return new Key(new Object[]{setupId});
    }


}
