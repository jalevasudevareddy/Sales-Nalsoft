package model.View;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 01 16:05:45 IST 2023
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TransBU_VORowImpl extends ViewRowImpl
{
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
    TransBU_Id
    {
      public Object get(TransBU_VORowImpl obj)
      {
        return obj.getTransBU_Id();
      }

      public void put(TransBU_VORowImpl obj, Object value)
      {
        obj.setTransBU_Id((Number)value);
      }
    }
    ,
    TransBU_Name
    {
      public Object get(TransBU_VORowImpl obj)
      {
        return obj.getTransBU_Name();
      }

      public void put(TransBU_VORowImpl obj, Object value)
      {
        obj.setTransBU_Name((String)value);
      }
    }
    ,
    XxwsHarItemTypeAcctVO
    {
      public Object get(TransBU_VORowImpl obj)
      {
        return obj.getXxwsHarItemTypeAcctVO();
      }

      public void put(TransBU_VORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    XxwsVasCustAcctMappingVO
    {
      public Object get(TransBU_VORowImpl obj)
      {
        return obj.getXxwsVasCustAcctMappingVO();
      }

      public void put(TransBU_VORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ,
    XxwsBusinessUnitLOV1
    {
      public Object get(TransBU_VORowImpl obj)
      {
        return obj.getXxwsBusinessUnitLOV1();
      }

      public void put(TransBU_VORowImpl obj, Object value)
      {
        obj.setAttributeInternal(index(), value);
      }
    }
    ;
    private static AttributesEnum[] vals = null;
    private static final int firstIndex = 0;

        public abstract Object get(TransBU_VORowImpl object);

        public abstract void put(TransBU_VORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


  public static final int TRANSBU_ID = AttributesEnum.TransBU_Id.index();
  public static final int TRANSBU_NAME = AttributesEnum.TransBU_Name.index();
  public static final int XXWSHARITEMTYPEACCTVO = AttributesEnum.XxwsHarItemTypeAcctVO.index();
  public static final int XXWSVASCUSTACCTMAPPINGVO = AttributesEnum.XxwsVasCustAcctMappingVO.index();
  public static final int XXWSBUSINESSUNITLOV1 = AttributesEnum.XxwsBusinessUnitLOV1.index();

  /**
   * This is the default constructor (do not remove).
   */
    public TransBU_VORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute TransBU_Id.
     * @return the TransBU_Id
     */
    public Number getTransBU_Id() {
        return (Number) getAttributeInternal(TRANSBU_ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBU_Id.
     * @param value value to set the  TransBU_Id
     */
    public void setTransBU_Id(Number value) {
        setAttributeInternal(TRANSBU_ID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TransBU_Name.
     * @return the TransBU_Name
     */
    public String getTransBU_Name() {
        return (String) getAttributeInternal(TRANSBU_NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TransBU_Name.
     * @param value value to set the  TransBU_Name
     */
    public void setTransBU_Name(String value) {
        setAttributeInternal(TRANSBU_NAME, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link XxwsHarItemTypeAcctVO.
     */
    public RowIterator getXxwsHarItemTypeAcctVO() {
        return (RowIterator)getAttributeInternal(XXWSHARITEMTYPEACCTVO);
    }

  /**
   * Gets the associated <code>RowIterator</code> using master-detail link XxwsVasCustAcctMappingVO.
   */
  public RowIterator getXxwsVasCustAcctMappingVO()
  {
    return (RowIterator) getAttributeInternal(XXWSVASCUSTACCTMAPPINGVO);
  }

  /**
   * Gets the view accessor <code>RowSet</code> XxwsBusinessUnitLOV1.
   */
    public RowSet getXxwsBusinessUnitLOV1() {
        return (RowSet)getAttributeInternal(XXWSBUSINESSUNITLOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
    }
    return super.getAttrInvokeAccessor(index, attrDef);
  }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
    if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count()))
    {
      AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
      return;
    }
    super.setAttrInvokeAccessor(index, value, attrDef);
  }
}
